{
  "version": 3,
  "sources": ["../src/urlName.ts"],
  "sourcesContent": ["import { EncodedValueMap, QueryParamConfigMap } from 'serialize-query-params';\n\n/**\n * Create an alias mapping using the optional `urlName` property on params\n */\nexport function serializeUrlNameMap(\n  paramConfigMap: QueryParamConfigMap\n): string | undefined {\n  let urlNameMapParts: string[] | undefined;\n  for (const paramName in paramConfigMap) {\n    if (paramConfigMap[paramName].urlName) {\n      const urlName = paramConfigMap[paramName].urlName;\n      const part = `${urlName}\\0${paramName}`;\n      if (!urlNameMapParts) urlNameMapParts = [part];\n      else urlNameMapParts.push(part);\n    }\n  }\n\n  return urlNameMapParts ? urlNameMapParts.join('\\n') : undefined;\n}\n\n/**\n * Converts the stringified alias/urlName map back into an object\n */\nexport function deserializeUrlNameMap(\n  urlNameMapStr: string | undefined\n): Record<string, string> | undefined {\n  if (!urlNameMapStr) return undefined;\n\n  return Object.fromEntries(\n    urlNameMapStr.split('\\n').map((part) => part.split('\\0'))\n  );\n}\n\n/**\n * converts { searchString: 'foo'} to { q: 'foo'} if the searchString\n * is configured to have \"q\" as its urlName.\n */\nexport function applyUrlNames(\n  encodedValues: Partial<EncodedValueMap<any>>,\n  paramConfigMap: QueryParamConfigMap\n) {\n  let newEncodedValues: Partial<EncodedValueMap<any>> = {};\n  for (const paramName in encodedValues) {\n    if (paramConfigMap[paramName]?.urlName != null) {\n      newEncodedValues[paramConfigMap[paramName].urlName!] =\n        encodedValues[paramName];\n    } else {\n      newEncodedValues[paramName] = encodedValues[paramName];\n    }\n  }\n\n  return newEncodedValues;\n}\n"],
  "mappings": "AAKO,SAAS,oBACd,gBACoB;AACpB,MAAI;AACJ,aAAW,aAAa,gBAAgB;AACtC,QAAI,eAAe,WAAW,SAAS;AACrC,YAAM,UAAU,eAAe,WAAW;AAC1C,YAAM,OAAO,GAAG,YAAY;AAC5B,UAAI,CAAC;AAAiB,0BAAkB,CAAC,IAAI;AAAA;AACxC,wBAAgB,KAAK,IAAI;AAAA,IAChC;AAAA,EACF;AAEA,SAAO,kBAAkB,gBAAgB,KAAK,IAAI,IAAI;AACxD;AAKO,SAAS,sBACd,eACoC;AACpC,MAAI,CAAC;AAAe,WAAO;AAE3B,SAAO,OAAO;AAAA,IACZ,cAAc,MAAM,IAAI,EAAE,IAAI,CAAC,SAAS,KAAK,MAAM,IAAI,CAAC;AAAA,EAC1D;AACF;AAMO,SAAS,cACd,eACA,gBACA;AAzCF;AA0CE,MAAI,mBAAkD,CAAC;AACvD,aAAW,aAAa,eAAe;AACrC,UAAI,oBAAe,eAAf,mBAA2B,YAAW,MAAM;AAC9C,uBAAiB,eAAe,WAAW,WACzC,cAAc;AAAA,IAClB,OAAO;AACL,uBAAiB,aAAa,cAAc;AAAA,IAC9C;AAAA,EACF;AAEA,SAAO;AACT;",
  "names": []
}
