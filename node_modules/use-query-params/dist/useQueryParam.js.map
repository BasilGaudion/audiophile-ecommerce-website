{
  "version": 3,
  "sources": ["../src/useQueryParam.ts"],
  "sourcesContent": ["import { useCallback, useMemo } from 'react';\nimport { QueryParamConfig } from 'serialize-query-params';\nimport { QueryParamOptions } from './options';\nimport { UrlUpdateType } from './types';\nimport useQueryParams from './useQueryParams';\n\ntype NewValueType<D> = D | ((latestValue: D) => D);\n\n/**\n * Given a query param name and query parameter configuration ({ encode, decode })\n * return the decoded value and a setter for updating it.\n *\n * The setter takes two arguments (newValue, updateType) where updateType\n * is one of 'replace' | 'replaceIn' | 'push' | 'pushIn', defaulting to\n * 'pushIn'.\n */\nexport const useQueryParam = <TypeToEncode, TypeFromDecode = TypeToEncode>(\n  name: string,\n  paramConfig?: QueryParamConfig<TypeToEncode, TypeFromDecode>,\n  options?: QueryParamOptions\n): [\n  TypeFromDecode,\n  (newValue: NewValueType<TypeToEncode>, updateType?: UrlUpdateType) => void\n] => {\n  const paramConfigMap = useMemo(\n    () => ({ [name]: paramConfig ?? 'inherit' }),\n    [name, paramConfig]\n  );\n  const [query, setQuery] = useQueryParams(paramConfigMap, options);\n  const decodedValue = query[name];\n  const setValue = useCallback(\n    (newValue: NewValueType<TypeToEncode>, updateType?: UrlUpdateType) => {\n      if (typeof newValue === 'function') {\n        return setQuery((latestValues) => {\n          const newValueFromLatest = (newValue as Function)(latestValues[name]);\n          return { [name]: newValueFromLatest };\n        }, updateType);\n      }\n      return setQuery({ [name]: newValue } as any, updateType);\n    },\n    [name, setQuery]\n  );\n\n  return [decodedValue, setValue];\n};\n"],
  "mappings": "AAAA,SAAS,aAAa,eAAe;AAIrC,OAAO,oBAAoB;AAYpB,MAAM,gBAAgB,CAC3B,MACA,aACA,YAIG;AACH,QAAM,iBAAiB;AAAA,IACrB,OAAO,EAAE,CAAC,OAAO,oCAAe,UAAU;AAAA,IAC1C,CAAC,MAAM,WAAW;AAAA,EACpB;AACA,QAAM,CAAC,OAAO,QAAQ,IAAI,eAAe,gBAAgB,OAAO;AAChE,QAAM,eAAe,MAAM;AAC3B,QAAM,WAAW;AAAA,IACf,CAAC,UAAsC,eAA+B;AACpE,UAAI,OAAO,aAAa,YAAY;AAClC,eAAO,SAAS,CAAC,iBAAiB;AAChC,gBAAM,qBAAsB,SAAsB,aAAa,KAAK;AACpE,iBAAO,EAAE,CAAC,OAAO,mBAAmB;AAAA,QACtC,GAAG,UAAU;AAAA,MACf;AACA,aAAO,SAAS,EAAE,CAAC,OAAO,SAAS,GAAU,UAAU;AAAA,IACzD;AAAA,IACA,CAAC,MAAM,QAAQ;AAAA,EACjB;AAEA,SAAO,CAAC,cAAc,QAAQ;AAChC;",
  "names": []
}
