"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.createJob = void 0;
const merge_1 = __importDefault(require("lodash/merge"));
const create_summary_1 = require("./create-summary");
const webpack = __importStar(require("../webpack"));
const lighthouse = __importStar(require("../lighthouse"));
const browsertime = __importStar(require("../browsertime"));
const constants_1 = require("../constants");
const SOURCE_MODULES = { webpack, lighthouse, browsertime };
const createJob = (source, baseline) => Object.values(constants_1.Source).reduce((agg, sourcePath) => {
    const rawData = source[sourcePath];
    if (!rawData) {
        return agg;
    }
    const sourceModule = SOURCE_MODULES[sourcePath];
    if (!sourceModule) {
        return agg;
    }
    const extractedData = sourceModule.extract(rawData, baseline);
    const summary = (0, create_summary_1.createSummary)(SOURCE_MODULES[sourcePath].SUMMARY_METRIC_PATHS, baseline?.metrics?.[sourcePath], extractedData?.metrics);
    return (0, merge_1.default)({}, agg, {
        meta: {
            [sourcePath]: extractedData.meta,
        },
        insights: {
            [sourcePath]: extractedData.insights,
        },
        summary: {
            [sourcePath]: summary,
        },
        metrics: {
            [sourcePath]: extractedData.metrics,
        },
        rawData: {
            [sourcePath]: rawData,
        },
    });
}, {});
exports.createJob = createJob;
//# sourceMappingURL=create-job.js.map